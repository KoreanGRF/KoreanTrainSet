/*------------------------------------------------------------------------------
  한국 열차 세트(Korean Train Set)
  * Official download site : https://telk.kr/ottd/newgrf/ko_train_set
  * Github repository      : https://github.com/KoreanGRF/KoreanTrainSet
------------------------------------------------------------------------------*/

// Cargo subtype
// switch(FEAT_TRAINS, SELF, sw_GTX_A_cargo_subtype_text, cargo_subtype) {
//     0: return string(STR_REFIT_METRO_SG_A000_1_NAME);
//     return string(STR_REFIT_METRO_SG_A000_1_NAME);
// }

// Engine
switch(FEAT_TRAINS, SELF, sw_GTX_A_engineH, cargo_subtype) {
    set_SG_A000_1_engineH;
}
switch(FEAT_TRAINS, SELF, sw_GTX_A_engineT, cargo_subtype) {
    set_SG_A000_1_engineT;
}

// Wagon
switch(FEAT_TRAINS, SELF, sw_GTX_A_wagon_panto1_cargo_subtype, cargo_subtype) {
    set_SG_A000_1_wagon_panto1;
}
switch(FEAT_TRAINS, SELF, sw_GTX_A_wagon_panto2_cargo_subtype, cargo_subtype) {
    set_SG_A000_1_wagon_panto2;
}
switch(FEAT_TRAINS, SELF, sw_GTX_A_wagon_cargo_subtype, cargo_subtype) {
    set_SG_A000_1_wagon;
}

// Engine
switch(FEAT_TRAINS, SELF, sw_GTX_A_engine, position_in_consist_from_end == 0 && num_vehs_in_consist > 1) {
    1: sw_GTX_A_engineT;
    sw_GTX_A_engineH;
}

// Pantograph - less than 7 cars (TC1 - T'1 (- M - ... - M -) T'2 - TC2)
switch(FEAT_TRAINS, SELF, sw_GTX_A_panto_wagon_for_short_front, position_in_vehid_chain) {
    0: sw_GTX_A_wagon_panto1_cargo_subtype;
    sw_GTX_A_wagon_cargo_subtype;
}
switch(FEAT_TRAINS, SELF, sw_GTX_A_panto_wagon_for_short, position_in_vehid_chain_from_end) {
    0: sw_GTX_A_wagon_panto2_cargo_subtype;
    sw_GTX_A_panto_wagon_for_short_front;
}

// Pantograph - equals to 7 cars (TC1 - T'1 (- M - ... - M -) T'2 - TC2)
switch(FEAT_TRAINS, SELF, sw_GTX_A_panto_wagon_for_7cars, (position_in_consist + 1) % 7) {
    2: sw_GTX_A_wagon_panto1_cargo_subtype;
    5: sw_GTX_A_wagon_panto2_cargo_subtype;
    sw_GTX_A_wagon_cargo_subtype;
}

// Pantograph - more than 7 cars (TC1 - M - T'1 (- M - ... - M -) T'2 - M - TC2)
switch(FEAT_TRAINS, SELF, sw_GTX_A_panto_wagon_for_long_front, position_in_vehid_chain) {
    0: sw_GTX_A_wagon_cargo_subtype;
    1: sw_GTX_A_wagon_panto1_cargo_subtype;
    sw_GTX_A_wagon_cargo_subtype;
}
switch(FEAT_TRAINS, SELF, sw_GTX_A_panto_wagon_for_long, position_in_vehid_chain_from_end) {
    0: sw_GTX_A_wagon_cargo_subtype;
    1: sw_GTX_A_wagon_panto2_cargo_subtype;
    sw_GTX_A_panto_wagon_for_long_front;
}

// Pantograph - for vehicle lengths
switch(FEAT_TRAINS, SELF, sw_GTX_A_wagon, num_vehs_in_consist) {
    1..6: sw_GTX_A_panto_wagon_for_short;   // less than 7 cars
    7:    sw_GTX_A_panto_wagon_for_7cars;   // equals to 7 cars
    sw_GTX_A_panto_wagon_for_long;          // more than 7 cars
}
